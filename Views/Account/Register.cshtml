@model RMA_Docker.Models.RegisterModel

@{
    ViewBag.Title = "Register";
}

<nav class="navbar navbar-expand-lg">
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="nav navbar-nav">
            <li class="nav-item">
                <h4 class="text-info">Register</h4>
                <h6>Create new user</h6>
            </li>
        </ul>
    </div>
</nav>

@using (Html.BeginForm()) {
<hr />
    @Html.AntiForgeryToken()
<div class="form-horizontal">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @if (TempData["RegisterSuccess"] != null) {
        <div class="RegisterSuccess text-info">
            <ul>
                <li>@TempData["RegisterSuccess"].ToString()</li>
            </ul>
        </div>
    }
    <div class="form-group">
        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10 mt-5">
            <input type="submit" value="Create" class="btn btn-outline-success" />
            @Html.ActionLink("Back to Previous", "ListUsers" , null, new { @class= "btn btn-outline-secondary ml-2" })
            <!--
               <input class="btn btn-outline-secondary" action="action" onclick="window.history.go(-1); return false;" type="button" value="Back To Previous" />
            -->
        </div>
    </div>
</div>
}