@model RMA_Docker.Models.RoleViewModel

@{
    ViewBag.Title = "EditRole";
}

<nav class="navbar navbar-expand-lg">
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="nav navbar-nav">
            <li class="nav-item">
                <h4 class="text-info">Account - Roles : @Model.NewRoleName</h4>
                <h6></h6>
            </li>
        </ul>
    </div>
</nav>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    <hr />
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (TempData["EditRole"] != null) {
            <div class="RegisterSuccess text-info">
                <ul>
                    <li>@TempData["EditRole"].ToString()</li>
                </ul>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.NewRoleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewRoleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewRoleName, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(model => Model.OldRoleName)

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Users", new { @class = "control-label col-md-2" })
            <div class="col-md-auto">
                <table id="usersInRole" class="table table-striped table-bordered" style="width:100%">
                    <tbody>
                        <tr>
                            <td>No Records</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 mt-5">
                <input type="submit" value="Save" class="btn btn-outline-success" />
                @Html.ActionLink("Back to Previous", "ListRoles", null, new { @class = "btn btn-outline-secondary ml-2" })
            </div>
        </div>
    </div>


    <div class="form-group mt-5">
        <hr />
        <div class="col-md-auto">
            <table id="usersNotInRole" class="table table-striped table-bordered" style="width:100%">
                <tbody>
                    <tr>
                        <td>No Records</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
}

<!-- DataTable JS -->
<script type="text/javascript" src="~/Scripts/datatables.min.js"></script>
<script>
    $(document).ready(function () {
        $.ajax({
            url: '@Url.Action("GetUsersRoleJson")',
            type: 'POST',
            data: JSON.stringify({ roleName: "@Model.NewRoleName"}),
            dataType: 'json',
            contentType: "application/json; charset=utf-8",
            success: function (result) {
                if (result.TotalInRole > 0) {
                    $('#usersInRole').DataTable({destroy: true,info: false,searching: false,lengthChange: false,order: [0, "asc"],data: result.DataInRole,columns: [{ data: "UserName", title: "User Name" },{ data: "Email", title: "Email" },{ data: "ExpiredDate", title: "Expired Date" },{ data: null, render: function (data) {var link1 = '@Html.ActionLink("Remove", "RemoveUserFromRole", new { userName = "_UserData", roleName = Model.NewRoleName }, new { @class = "btn btn-outline-warning" })';link1 = link1.replace(/\_UserData/g, data.UserName);var link2 = '@Html.ActionLink("_OwnershipName", "_OwnershipAction", new { userName = "_UserData", roleName = Model.NewRoleName }, new { @class = "_CssClass" })';link2 = link2.replace(/\_UserData/g, data.UserName);if (data.ThisRoleOwner) {link2 = link2.replace(/\_OwnershipName/g, "- Admin");link2 = link2.replace(/\_OwnershipAction/g, "UnassignOwnerShip");link2 = link2.replace(/\_CssClass/g, "btn btn-outline-warning");return link2;} else {link2 = link2.replace(/\_OwnershipName/g, "+ Admin");link2 = link2.replace(/\_OwnershipAction/g, "AssignOwnerShip");link2 = link2.replace(/\_CssClass/g, "btn btn-outline-success ml-1");return link1 + link2;}}, targets: -1, title: "Actions" },],aoColumnDefs: [{ "width": "20%", targets: 0 },{ "width": "200px", targets: 3 },{ bSortable: false, aTargets: [1,2,3] }]});
                }
                if (result.TotalNotInRole > 0) {
                    $('#usersNotInRole').DataTable({destroy: true,info: false,searching: true,order: [0, "asc"],data: result.DataNotInRole,columns: [{ data: "UserName", title: "User Name" },{ data: "Email", title: "Email" },{ data: "ExpiredDate", title: "Expired Date" },{ data: null, render: function (data) {var link = '@Html.ActionLink("Add To Role", "AddUserToRole", new { userName = "_UserData", roleName = Model.NewRoleName }, new { @class = "btn btn-outline-success" })';link = link.replace(/\_UserData/g, data.UserName);return link;}, targets: -1, title: "Actions" },],aoColumnDefs: [{ "width": "20%", targets: 0 },{ "width": "70px", targets: 3 },{ bSortable: false, aTargets: [1,2,3] }]});
                }
            },
            error: function (result) { console.log(result); }
        });
    });
</script>