@model RMA_Docker.Models.ChangePasswordModel

@{
    ViewBag.Title = "ChangePassword";
    String userName = "";
    if (!String.IsNullOrEmpty(Model.UserName)) { userName = Model.UserName; }
}

<nav class="navbar navbar-expand-lg">
    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="nav navbar-nav">
            <li class="nav-item">
                <h4 class="text-info">ChangePassword - @userName</h4>
                <h6>Change the Password</h6>
            </li>
        </ul>
    </div>
</nav>


@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    <hr />
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @if (TempData["Success"] != null) { 
            <span class="text-info">@TempData["Success"].ToString()</span>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.OldPassword, htmlAttributes: new { @class = "control-label col-md-auto" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-auto" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-auto" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10 mt-5">
                <input type="submit" value="Save" class="btn btn-outline-primary" />
                @Html.ActionLink("Back to Users", "EditUser", new { userName = Model.UserName }, new { @class = "btn btn-outline-secondary ml-2" })
            </div>
        </div>
    </div>
}
